-- this goes in global

local moduleList = {}
local function registerModule(argtable) -- to be called from a module during onload() with argtable {self}
  local module = argtable.ref
  local moduleName = argtable.name
  if moduleList[moduleName] then
    log("Tried to add duplicate module " .. moduleName ..  "! original: " .. moduleList[moduleName].guid .. " new: " .. module.guid)
  else
    moduleList[moduleName] = module
  end
end

function checkController(obj) -- check if a new object is controlled by anything and instantiate it if yes.
  local moduleName = obj.getGMNotes() -- could add in a JSON.decode but whatever
  local module = moduleList[moduleName] -- object's GMNOte should be the name of the module it's controlled by.
  if module then
    module.call("create_" .. moduleName, {obj}) -- so each module must have a function of form initModuleName({obj}) for any object types it controls.
  end
end
-- don't forget to put a call to checkController() into Global's onObjectSpawn() ..
function onObjectSpawn(obj)
  -- print("hi")
  checkController(obj)
end

-- ..and into Global's onLoad()
function onLoad(save_state)
  for i, obj in ipairs(getAllObjects()) do
    checkController(obj)
  end
end


-- each module has an onLoad() like this
-- function onLoad()
--   Global.call("registerModule", {name = moduleName, ref = self})
-- end
